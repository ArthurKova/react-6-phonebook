{"version":3,"file":"static/js/102.290016e8.chunk.js","mappings":"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","sources":["webpack://react-6-phonebook/./src/Component/ContactList/ContactList.module.css?ce07","Component/ContactList/ContactList.jsx","webpack://react-6-phonebook/./src/Component/NewContactForm/NewContactForm.module.css?38aa","Component/NewContactForm/NewContactForm.jsx","Component/views/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page__list\":\"ContactList_page__list__48e4-\",\"page__item\":\"ContactList_page__item__K8xw-\",\"text\":\"ContactList_text__QeQBO\",\"page__button\":\"ContactList_page__button__zlPC8\"};","import s from './ContactList.module.css';\nimport propTypes from 'prop-types';\nimport { toastContactSucces } from 'Component/features/phonebookFeatures';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  const deleteElement = id => {\n    deleteContact(id);\n    toastContactSucces();\n  };\n\n  if (contacts?.length === 0) {\n    return <h1>No contacts yet</h1>;\n  }\n\n  return (\n    <ul className={s.page__list}>\n      {contacts?.map(contact => {\n        const { name, phone, id, number } = contact;\n        return (\n          <li key={id} className={s.page__item}>\n            <p className={s.text}>\n              {name}: <br /> {phone || number}\n            </p>\n            <button\n              onClick={() => deleteElement(id)}\n              className={s.page__button}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filtredContacts: propTypes.array,\n  deleteContact: propTypes.func,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"newcontact__form\":\"NewContactForm_newcontact__form__l6TTV\",\"box\":\"NewContactForm_box__kBu88\",\"newcontact__label\":\"NewContactForm_newcontact__label__QRW8G\",\"newcontact__input\":\"NewContactForm_newcontact__input__hHiU7\",\"newcontact__btn\":\"NewContactForm_newcontact__btn__QK19e\",\"namemsg\":\"NewContactForm_namemsg__jnSHJ\",\"phonemsg\":\"NewContactForm_phonemsg__SVzKf\"};","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport s from './NewContactForm.module.css';\nimport * as api from '../features/phonebookFeatures';\n\nconst ContactForm = ({ addNewContact, addNewPrivateContact }) => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n    },\n\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(1, 'Must be 1 characters or more')\n        .required('Required')\n        .matches(/[a-zA-Z]/, 'Name can only contain Latin letters.'),\n      phone: Yup.string()\n        .matches('^[0-9]+$', 'Phone phone is not valid')\n        .min(8, 'Must contain 8-16 digits')\n        .max(16, 'Must contain 18-16 digits'),\n    }),\n\n    onSubmit: ({ name, phone }, { resetForm }) => {\n      const titleCase = api.toTitleCase(name);\n      const splitedNumber = api.phoneNumberAutoFormat(phone);\n\n      if (addNewContact) {\n        addNewContact({ name: titleCase, phone: splitedNumber });\n      } else {\n        addNewPrivateContact({ name: titleCase, number: splitedNumber });\n      }\n\n      resetForm();\n      api.toastMsg();\n    },\n  });\n\n  return (\n    <>\n      <h1>Add new contact</h1>\n      <form onSubmit={formik.handleSubmit} className={s.newcontact__form}>\n        <div className={s.box}>\n          <label htmlFor=\"name\" className={s.newcontact__label}>\n            Name\n          </label>\n          <input\n            className={s.newcontact__input}\n            autoComplete=\"off\"\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n            placeholder=\"john snow\"\n          />\n          {formik.errors.name ? (\n            <div className={s.namemsg}>{formik.errors.name}</div>\n          ) : null}\n        </div>\n\n        <div className={s.box}>\n          <label htmlFor=\"phone\" className={s.newcontact__label}>\n            Phone\n          </label>\n          <input\n            className={s.newcontact__input}\n            autoComplete=\"off\"\n            id=\"phone\"\n            name=\"phone\"\n            type=\"tel\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.phone}\n            placeholder=\"1234567890\"\n          />\n          {formik.touched.phone && formik.errors.phone ? (\n            <div className={s.phonemsg}>{formik.errors.phone}</div>\n          ) : null}\n        </div>\n        <button type=\"submit\" className={s.newcontact__btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import NewContactForm from '../NewContactForm';\r\nimport ContactList from 'Component/ContactList/ContactList';\r\nimport {\r\n  useAddNewPrivateContactMutation,\r\n  useGetAllPrivateContactsQuery,\r\n  useDeletePrivateContactMutation,\r\n} from 'redux/privateContacts/privateContactsApi';\r\n\r\nconst Contacts = () => {\r\n  const [addNewPrivateContact] = useAddNewPrivateContactMutation();\r\n  const { data } = useGetAllPrivateContactsQuery();\r\n  const [deleteContact] = useDeletePrivateContactMutation();\r\n\r\n  return (\r\n    <div>\r\n      <NewContactForm addNewPrivateContact={addNewPrivateContact} />\r\n      <ContactList contacts={data} deleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"names":["_ref","contacts","deleteContact","length","_jsx","children","className","s","map","contact","name","phone","id","number","_jsxs","onClick","toastContactSucces","deleteElement","addNewContact","addNewPrivateContact","formik","useFormik","initialValues","validationSchema","Yup","min","required","matches","max","onSubmit","_ref2","_ref3","resetForm","titleCase","api","splitedNumber","_Fragment","handleSubmit","htmlFor","autoComplete","type","onChange","handleChange","onBlur","handleBlur","value","values","placeholder","errors","touched","_useAddNewPrivateCont","useAddNewPrivateContactMutation","_slicedToArray","data","useGetAllPrivateContactsQuery","_useDeletePrivateCont","useDeletePrivateContactMutation","NewContactForm","ContactList"],"sourceRoot":""}